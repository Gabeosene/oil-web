---
/* oilpage.astro */
import "../styles/terminal.css";

const bootLog = [
  { time: "00:00:00.031", iso: "PT0.031S", message: "BOOT SEQUENCE  OIL SYSTEM BIOS v4.2" },
  { time: "00:00:00.214", iso: "PT0.214S", message: "MEMORY BANKS CALIBRATED" },
  { time: "00:00:00.402", iso: "PT0.402S", message: "SENSOR GRID ONLINE" },
  { time: "00:00:00.655", iso: "PT0.655S", message: "NEURAL ROUTINES STABLE" },
  { time: "00:00:00.883", iso: "PT0.883S", message: "FIELD OPERATIONS SYNCED" },
  { time: "00:00:01.127", iso: "PT1.127S", message: "INIT HANDSHAKE OPERATOR LINK ESTABLISHED" },
  { time: "00:00:01.512", iso: "PT1.512S", message: "DIAGNOSTIC SUMMARY: ALL SYSTEMS NOMINAL" },
];

const newsFeed = [
  {
    iso: "2025-09-18",
    stamp: "9 SEPTEMBER 2025",
    title: "Website is Live!",
    summary: "After a lot of fighting with our internal systems, our website is finally online. Please enjoy :)",
    status: "OIL Internal",
  },
];
---

<head>
  <meta charset="UTF-8" />
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1, viewport-fit=cover"
  />
  <meta name="color-scheme" content="light dark" />
  <meta
    name="description"
    content="Obuda Innovation Laboratory (OIL) – Advancing science and innovation through interdisciplinary research at Obuda University."
  />

  <title>Obuda Innovation Laboratory</title>

  <!-- Favicons -->
  <link rel="icon" href="/images/oil-favicon.svg" type="image/svg+xml" />
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png" />

  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap"
    rel="stylesheet"
  />
</head>

<main>
  <!-- System clock -->
  <div class="system-clock" aria-live="polite">
    <div class="system-clock__row">
      <span class="clock-label">Local</span>
      <time id="clock-local" aria-label="Local time">--:--:--</time>
    </div>
    <div class="system-clock__row">
      <span class="clock-label">Budapest</span>
      <time id="clock-budapest" aria-label="Budapest time">--:--:--</time>
    </div>
  </div>

  <header>
    <div class="fit-container logo-block">
      <pre id="ascii-logo" class="ascii-fit-border">{String.raw`
              -j|jj|jj|jj|jj|jj               
           {|jcOaddaddaddaddaddJc|j{           
        c|cOdaaaaaaaaaaaaaaaaaaaaddOcjj        
      jcOddaaadaaaadaadaadaadaaaaaadddOcj      
     jOddaaaaaaadaM@@@@@@@@@MadaaaaaaaddO|     
   |cOdaaaadaaaa@@@@       @@@@adaaaaaaadOJ    
   Jaaaaadaaada@@@           @@@aadaadaaaaaO   
 JOdaaadaaaaaaM@j  @@@@@@@@@  J@MaaaaaadaaadOJ 
 jdaadaaaadaaa@@  @@@aaaaa@@@  @@aadaaaaadaadj 
{Oaaaaaadaaada@   @aaaOILdaM@  "@aaaadaaaaaaaO|
jdaadaaaaaaaaa@@  @@Maaaaa@@@  @@adaaaadaadaadj
jdaaaadaadaaad@@   @@@@@@@@@   @@aaadaaaaaaaadj
jdaaaaaaaaadaaa@@@    -@-    @@@adaaaadaadaaadj
jdaadaadaaaaaada@@@@       @@@@aaaadaaaaaaadadj
|daaaaaaadaadaaaaa@@@@@@@@@@@aadaaaaadaadaaaaa|
|Odaadaaaaaaaaadaa@         @aaaadaaaaaaaadadO{
 jdaaaadaadaadaaad@@@@@@@@@@@adaaaadaadaaaaadc 
 cJdaaaaaaaaaaaaaa@         @aaadaaaaaaadaadOJ 
  dJdaaadaadaadaaa@  @@@@@@@@aaaaadaadaaaddOj  
    cOdaaaaaaaaada@  @aaaaaaadaaaaaaaaaddOc|   
     jOdaadaadaaaa@@@@aadaadaaadaaadaaddOj     
      {cJdaaaaadaaaaaadaaaaaaaaaadaadOcj{      
         |cJddaaadaadaaaadaadaaadddOc{         
           {j|cJddddddddddddddaOcj|{           
               jjjjj|jj|jj|jj|j-               
`}</pre>
      <h1 class="logo-title">Obuda Innovation Laboratory</h1>
    </div>

    <!-- ASCII fit script -->
    <script is:inline>
  (function () {
    function fitAsciiToContainer(el) {
      const container = el.closest('.fit-container') || el.parentElement;
      if (!container) return;

      const cs = getComputedStyle(container);
      const available =
        container.clientWidth -
        parseFloat(cs.paddingLeft || 0) -
        parseFloat(cs.paddingRight || 0);

      const lines = el.textContent.replace(/\r/g, '').split('\n');
      const cols = Math.max(1, ...lines.map((l) => l.length));

      // One probe at 100px to get px/char
      const probe = document.createElement('span');
      probe.style.visibility = 'hidden';
      probe.style.position = 'absolute';
      probe.style.whiteSpace = 'pre';
      probe.style.fontFamily = getComputedStyle(el).fontFamily;
      probe.style.fontSize = '100px';
      probe.textContent = '0'.repeat(cols);
      document.body.appendChild(probe);
      const widthAt100 = probe.getBoundingClientRect().width || 1;
      probe.remove();

      const pxPerCharAt100 = widthAt100 / cols;
      let size = available / pxPerCharAt100;
      size = Math.max(8, Math.min(28, size));
      el.style.fontSize = size + 'px';
    }

    function mountAsciiFit(root = document) {
      const els = Array.from(root.querySelectorAll('.ascii-fit-border'));
      if (!els.length) return;

      // Refit only when WIDTH really changed (ignore mobile URL bar height jiggle)
      let lastWidth = window.visualViewport ? window.visualViewport.width : window.innerWidth;
      let raf = 0, t = 0;

      const refitAll = () => els.forEach(fitAsciiToContainer);

      // Initial fit
      refitAll();

      // Observe container WIDTH changes (not height)
      const ro = new ResizeObserver((entries) => {
        // If width didn't change, ignore (prevents jump while scrolling on mobile)
        const nowW = window.visualViewport ? window.visualViewport.width : window.innerWidth;
        if (Math.round(nowW) === Math.round(lastWidth)) return;
        lastWidth = nowW;

        // Debounce via rAF + timeout
        cancelAnimationFrame(raf);
        clearTimeout(t);
        raf = requestAnimationFrame(() => {
          t = setTimeout(refitAll, 50);
        });
      });

      els.forEach((el) => {
        const cont = el.closest('.fit-container') || el.parentElement;
        if (cont) ro.observe(cont);
      });

      // Also listen to WINDOW width-only changes (e.g., rotate)
      const onVVResize = () => {
        const nowW = window.visualViewport ? window.visualViewport.width : window.innerWidth;
        if (Math.round(nowW) === Math.round(lastWidth)) return;
        lastWidth = nowW;
        cancelAnimationFrame(raf);
        clearTimeout(t);
        raf = requestAnimationFrame(() => { t = setTimeout(refitAll, 50); });
      };

      if (window.visualViewport) {
        window.visualViewport.addEventListener('resize', onVVResize, { passive: true });
      } else {
        // Fallback: check width change on window resize
        window.addEventListener('resize', onVVResize, { passive: true });
      }
    }

    document.addEventListener('DOMContentLoaded', () => mountAsciiFit(document));
  })();
</script>

  </header>

  <section class="info-panels" aria-label="Site information panels">
    <details>
      <summary>About</summary>
      <p>
        Obuda Innovation Laboratory (O.I.L.) is Obuda University's premier destination for both International and Domestic students. We are the first and only English-First collective within the university and pride ourselves on our cooperation. We are open to students, professors and community members of all technical backgrounds.
      </p>
      <p>
        Founded in 2024 OIL is in the heart of Budapest, and strives to become the city's premier makerspace and research hub, innovating across all sectors. Across Big Data, AI, Robotics, Business, IOT, Design, Art and more, our team of students are ready to take on any challenge you or your business faces. Contact us with your project ideas today!
      </p>
    </details>

    <details>
      <summary>How we work</summary>
      <h3>Your Time, Your Projects</h3>
      <p>
        At OIL, you've got freedom. Got a class project? Bring it. Need a quiet corner to study? Done. Want to tinker with a 3D printer? Go for it. Whether it's a weird prototype, a custom part, or a full start-up idea, the space is yours.
      </p>
      <h3>The Deal</h3>
      <p>
        We give you the gear, the space, and the protection for your ideas. In return, we ask you to kick in <b>30–40% of your time</b> for Lab Projects.
        <br />
        These are the big missions: cracking industrial problems, building weird machines, training AI models, or converting an old car to electric. Projects that gets OIL noticed, brings in funding, and lets us keep reaching for bigger and better things.
      </p>
      <h3>No Skills? No Problem!</h3>
      <p>
        Never touched a soldering iron? Never written a line of code? Perfect! OIL is a sandbox for trial and error. Fail forward, fail fast, fail better. Here, you'll get handed a tool, a quick crash course, and a new problem to solve right after.
      </p>
    </details>

    <details>
      <summary>Location</summary>
      <ul>
        <li>Headquarters: Obudai Egyetem - Bánki Donát Faculty, Blaha Lujza tér, Budapest, Hungary</li>
      </ul>
    </details>

    <details>
      <summary>Contact</summary>
      <ul>
        <li>Main Email: oil@oil-obuda.hu</li>
        <li>Head of Operation's Email: gabrielcreamer@oil-obuda.hu</li>
        <li>Head of Equipment's Email: gorjan@oil-obuda.hu</li>
        <li>Head of Finance's Email: dragoslav@oil-obuda.hu</li>
      </ul>
    </details>

    <details>
      <summary>Join Us</summary>
      <ul>
        <li>Please follow the link to a Google Form to join OIL today!</li>
        <li>
          <a
            class="footer-cta"
            href="https://docs.google.com/forms/d/e/1FAIpQLSdx4pLc4U_tc6f43EmEr5PYv8chOBxufopI2WGBb9e36x5uYw/viewform?usp=sharing&ouid=106583092023257242650"
            target="_blank"
            rel="noopener noreferrer"
            >Join OIL</a
          >
        </li>
      </ul>
    </details>
  </section>

  <section class="news-feed" aria-labelledby="news-feed-heading">
    <div class="news-feed__header">
      <h2 id="news-feed-heading">oil news feed</h2>
      <p>Updates direct from OIL</p>
    </div>
    <ol class="news-feed__list">
      {newsFeed.map((item) => (
        <li>
          <article>
            <header>
              <span class="news-feed__badge">{item.status}</span>
              <time dateTime={item.iso}>{item.stamp}</time>
            </header>
            <h3>{item.title}</h3>
            <p>{item.summary}</p>
          </article>
        </li>
      ))}
    </ol>
  </section>

  <section aria-labelledby="boot-log-heading">
    <h2 id="boot-log-heading" class="sr-only">Boot log entries</h2>
    <ol class="boot-log">
      {bootLog.map((entry) => (
        <li>
          <time dateTime={entry.iso}>{entry.time}</time>
          <span>{entry.message}</span>
        </li>
      ))}
    </ol>
  </section>

  <!-- Footer -->
  <footer class="site-footer" aria-labelledby="footer-heading">
    <h2 id="footer-heading" class="sr-only">Obuda Innovation Laboratory footer</h2>

    <div class="site-footer__status" role="status">
      <span class="status-label">STATUS</span>
      <span class="status-value">ONLINE AWAITING COMMAND</span>
    </div>

    <div class="site-footer__grid">
      <section aria-label="Follow us">
        <h3>Follow us</h3>
        <ul>
          <li>
            <a
              href="https://www.linkedin.com/company/obuda-innovation-laboratory/"
              target="_blank"
              rel="noopener noreferrer"
              >LinkedIn</a
            >
          </li>
          <li>
            <a
              href="https://www.instagram.com/oil_banki/?hl=en"
              target="_blank"
              rel="noopener noreferrer"
              >Instagram</a
            >
          </li>
          <li>
            <a
              href="https://docs.google.com/forms/d/e/1FAIpQLSdx4pLc4U_tc6f43EmEr5PYv8chOBxufopI2WGBb9e36x5uYw/viewform?usp=sharing&ouid=106583092023257242650"
              target="_blank"
              rel="noopener noreferrer"
              >Join Form</a
            >
          </li>
        </ul>
      </section>

      <section class="footer-logo-wrap" aria-label="OIL logo">
        <img
          src="/images/6-OIL-icon-gradient-blue.svg"
          alt="OIL Logo"
          class="footer-logo"
          width="140"
          height="140"
        />
      </section>

      <section aria-label="Lab address">
        <h3>Lab address</h3>
        <address>
          Obuda Innovation Laboratory (O.I.L.)<br />
          Csokonai utca 6<br />
          H-1081 Budapest<br />
          Hungary
        </address>
        <div class="glitch" data-text="AUTHORIZED CHAOS ONLY">AUTHORIZED CHAOS ONLY</div>
      </section>

      <section class="footer-newsletter" aria-label="Join our newsletter">
        <h3>Join our newsletter</h3>
        <p>
          Receive lab bulletins, project calls, and event invitations straight to your inbox.
        </p>
        <form id="signup-form" data-ajax novalidate>
          <input
            type="email"
            name="email"
            placeholder="oil@oil-obuda.hu"
            required
            inputmode="email"
            autocomplete="email"
          />
          <button id="signup-btn" type="submit">Subscribe</button>
          <span
            id="signup-msg"
            aria-live="polite"
            style="display:inline-block; min-width:8ch; margin-left:.5rem;"
          ></span>
        </form>
      </section>
    </div>

    <div class="site-footer__bar" role="contentinfo">
      <p>OIL 2025: All rights reserved</p>
      <p>Version 3.7.1</p>
    </div>
  </footer>
</main>

<!-- Anti-jump and newsletter JS -->
<script is:inline>
  // Let the browser manage scroll position normally
  if ('scrollRestoration' in history) history.scrollRestoration = 'auto';

  // Detect touch scrolling (used to pause non-critical UI updates)
  let _isTouchScrolling = false;
  addEventListener('touchstart', () => { _isTouchScrolling = true; }, { passive: true });
  addEventListener('touchend',   () => { setTimeout(() => _isTouchScrolling = false, 250); }, { passive: true });

  const FORM_ENDPOINT = 'https://script.google.com/macros/s/AKfycbyeYmHt2kCQ4ybemI62-7kmbJIFNVIKtKj-wC3ot7eCsDGXg5nmYMWaG0XGfcMGOpGkMg/exec';

  // Kill jumps from dummy anchors (use click only; avoid global non-passive touchstart)
  const stopJump = (e) => {
    const a = e.target.closest && e.target.closest('a[href="#"], a[href=""]');
    if (a) { e.preventDefault(); e.stopPropagation(); return false; }
  };
  document.addEventListener('click', stopJump);

  // AJAX the signup form (no navigation)
  const form = document.getElementById('signup-form');
  const btn  = document.getElementById('signup-btn');
  const msg  = document.getElementById('signup-msg');

  if (form && btn && msg) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // iOS Safari: blur to avoid snap when keyboard closes
      if (document.activeElement && document.activeElement.blur) document.activeElement.blur();

      const original = btn.textContent;
      btn.disabled = true;
      btn.textContent = 'Submitting…';
      msg.textContent = '';

      try {
        await fetch(FORM_ENDPOINT, {
          method: 'POST',
          mode: 'no-cors',
          body: new FormData(form),
          keepalive: true
        });

        btn.textContent = 'Subscribed!';
        msg.textContent = 'Thanks!';
        form.reset();
      } catch (err) {
        btn.disabled = false;
        btn.textContent = original;
        msg.textContent = 'Error. Try again?';
        console.error(err);
      } finally {
        setTimeout(() => { btn.disabled = false; }, 1200);
      }
    }, { capture: true });
  }

  // Guard against accidental hash jumps
  window.addEventListener('hashchange', (e) => {
    if (!location.hash) return;
    const id = location.hash.slice(1);
    if (!document.getElementById(id)) {
      e.preventDefault?.();
      history.replaceState(null, '', location.pathname + location.search);
    }
  });

  // Keep footer from affecting scroll anchoring if it changes height
  document.querySelector('.site-footer')?.style.setProperty('overflow-anchor', 'none');
</script>

<!-- Clock JS (scroll-safe) -->
<script is:inline>
  if (typeof window !== "undefined") {
    const localClock    = document.getElementById("clock-local");
    const budapestClock = document.getElementById("clock-budapest");

    const localFormatter = new Intl.DateTimeFormat(undefined, { hour: "2-digit", minute: "2-digit", second: "2-digit" });
    const budapestFormatter = new Intl.DateTimeFormat(undefined, {
      hour: "2-digit", minute: "2-digit", second: "2-digit",
      timeZone: "Europe/Budapest"
    });

    const localTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone ?? "UTC";
    const buildIso = (tz) => new Intl.DateTimeFormat("sv-SE", {
      year: "numeric", month: "2-digit", day: "2-digit",
      hour: "2-digit", minute: "2-digit", second: "2-digit",
      timeZone: tz, timeZoneName: "shortOffset"
    });
    const localIso = buildIso(localTimeZone);
    const budapestIso = buildIso("Europe/Budapest");

    const isoWithOffset = (fmt, d) => {
      const parts = Object.fromEntries(fmt.formatToParts(d).filter(p => p.type !== "literal").map(p => [p.type, p.value]));
      const m = parts.timeZoneName?.match(/GMT([+-])(\d{1,2})(?::(\d{2}))?/);
      const off = m ? `${m[1]}${m[2].padStart(2,"0")}:${(m[3] ?? "00").padStart(2,"0")}` : "Z";
      return `${parts.year}-${parts.month}-${parts.day}T${parts.hour}:${parts.minute}:${parts.second}${off}`;
    };

    let isTouchScrolling = false;
    addEventListener("touchstart", () => { isTouchScrolling = true; }, { passive: true });
    addEventListener("touchend",   () => { setTimeout(() => { isTouchScrolling = false; }, 250); }, { passive: true });

    const updateClock = () => {
      if (isTouchScrolling) return;
      const now = new Date();
      if (localClock) {
        const t = localFormatter.format(now);
        if (localClock.textContent !== t) localClock.textContent = t;
        localClock.dateTime = isoWithOffset(localIso, now);
      }
      if (budapestClock) {
        const t = budapestFormatter.format(now);
        if (budapestClock.textContent !== t) budapestClock.textContent = t;
        budapestClock.dateTime = isoWithOffset(budapestIso, now);
      }
    };

    updateClock();
    setInterval(updateClock, 1000);
  }
</script>

<!-- Keep the tapped <summary> visually in place while its <details> opens/closes -->
<script is:inline>
  (function () {
    const root = document.querySelector('.info-panels');
    if (!root) return;

    root.addEventListener('toggle', (e) => {
      const details = e.target;
      if (!(details instanceof HTMLDetailsElement)) return;

      const summary = details.querySelector('summary');
      if (!summary) return;

      const beforeTop = summary.getBoundingClientRect().top;
      const beforeScrollY = window.scrollY || document.documentElement.scrollTop || document.body.scrollTop || 0;

      requestAnimationFrame(() => {
        const afterTop = summary.getBoundingClientRect().top;
        const delta = afterTop - beforeTop;
        if (delta !== 0) window.scrollTo({ top: beforeScrollY + delta, left: 0, behavior: 'auto' });
      });
    }, true);
  })();
</script>
